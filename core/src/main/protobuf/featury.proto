syntax = "proto2";

import "scalapb/scalapb.proto";

option (scalapb.options) = {
  scope: FILE
  package_name: "io.findify.featury.model"
  flat_package: true
  single_file: true
  no_default_values_in_constructor: true
  preserve_unknown_fields: false
};

message Key {
    option (scalapb.message).companion_extends = "io.findify.featury.model.KeyCompanionOps";
    option (scalapb.message).companion_extends = "io.findify.featury.model.json.KeyJson";
    option (scalapb.message).extends = "io.findify.featury.model.KeyOps";
    message Scope {
        option (scalapb.message).extends = "AnyVal";
        required string name = 1;
    }
    message Tag {
        required Scope scope = 1;
        required string value = 2;
    }
    message FeatureName {
        option (scalapb.message).extends = "AnyVal";
        required string value = 1;
    }
    message Tenant {
        option (scalapb.message).extends = "AnyVal";
        required string value = 1;
    }

    required Tag tag = 1;
    required FeatureName name = 2;
    required Tenant tenant = 3;
}

message Timestamp {
    option (scalapb.message).companion_extends = "io.findify.featury.model.TimestampOps.TimestampCompanion";
    option (scalapb.message).extends = "io.findify.featury.model.TimestampOps";
    option (scalapb.message).companion_extends = "io.findify.featury.model.json.TimestampJson";
    required int64 ts = 1;
}

message Scalar {
    oneof sealed_value {
        SString scalarString = 1;
        SDouble scalarDouble = 2;
        SBoolean scalarBoolean = 3;
    }
}

message SString {
    required string value = 1;
}
message SDouble {
    required double value = 1;
}
message SBoolean {
    required bool value = 1;
}

message ScalarValue {
    required Key key = 1;
    required Timestamp ts = 2;
    required Scalar value = 3;
}

message CounterValue {
    required Key key = 1;
    required Timestamp ts = 2;
    required int64 value = 3;
}

message NumStatsValue {
    required Key key = 1;
    required Timestamp ts = 2;
    required double min = 3;
    required double max = 4;
    map<int32, double> quantiles = 5;
}

message MapValue {
    required Key key = 1;
    required Timestamp ts = 2;
    map<string,Scalar> values = 3;
}

message PeriodicCounterValue {
    message PeriodicValue {
        required Timestamp start = 1;
        required Timestamp end = 2;
        required int32 periods = 3;
        required int64 value = 4;
    }
    required Key key = 1;
    required Timestamp ts = 2;
    repeated PeriodicValue values = 3 [(scalapb.field).collection_type="List"];
}

message FrequencyValue {
    required Key key = 1;
    required Timestamp ts = 2;
    map<string, double> values = 3;
}

message TimeValue {
    required Timestamp ts = 1;
    required Scalar value = 2;
}

message BoundedListValue {
    required Key key = 1;
    required Timestamp ts = 2;
    repeated TimeValue values = 3 [(scalapb.field).collection_type="List"];
}

message FeatureValue {
    option (scalapb.message).sealed_oneof_extends = "io.findify.featury.model.FeatureValueOps";
    oneof sealed_value_optional {
        ScalarValue scalarValue = 1;
        CounterValue counterValue = 2;
        NumStatsValue numStatsValue = 3;
        PeriodicCounterValue periodicCounterValue = 4;
        FrequencyValue frequencyValue = 5;
        BoundedListValue boundedListValue = 6;
        MapValue mapValue = 7;
    }
}

message ScalarState {
    required Key key = 1;
    required Timestamp ts = 2;
    required Scalar value = 3;
}

message CounterState {
    required Key key = 1;
    required Timestamp ts = 2;
    required int64 value = 3;
}

message MapState {
    required Key key = 1;
    required Timestamp ts = 2;
    map<string,Scalar> values = 3;
}

message PeriodicCounterState {
    message TimeCounter {
        required Timestamp ts = 1;
        required int64 count = 2;
    }
    required Key key = 1;
    required Timestamp ts = 2;
    repeated TimeCounter values = 3 [(scalapb.field).collection_type="List"];
}

message BoundedListState {
    required Key key = 1;
    required Timestamp ts = 2;
    repeated TimeValue values = 3 [(scalapb.field).collection_type="List"];
}

message FrequencyState {
    required Key key = 1;
    required Timestamp ts = 2;
    repeated string values = 3 [(scalapb.field).collection_type="List"];
}

message StatsState {
    required Key key = 1;
    required Timestamp ts = 2;
    repeated double values = 3 [(scalapb.field).collection_type="List"];
}

message State {
    option (scalapb.message).sealed_oneof_extends = "io.findify.featury.model.StateOps";
    oneof sealed_value_optional {
        ScalarState scalarState = 1;
        CounterState counterState = 2;
        PeriodicCounterState periodicCounterState = 3;
        BoundedListState boundedListState = 4;
        FrequencyState frequencyState = 5;
        StatsState statsState = 6;
        MapState mapState = 7;
    }
}

message StateKey {
    required Key.Tag tag = 1;
    required Key.FeatureName name = 2;
}